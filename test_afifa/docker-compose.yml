version: '3.6'

services:
  postgresdb:
    container_name: postgresdb
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: admin#afifa  # superuser password, username is postgres
      POSTGRES_DB: test_afifa  # default db created when image first started
    volumes:
      - "./data/postgres:/var/lib/postgresql"
    ports:
      - "5432:5432"

  mongodb:
    container_name: mongodb
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: admin#afifa
      MONGO_INITDB_DATABASE: test_afifa
    ports:
      - "27017:27017"
    env_file:
      - project_config.env
    volumes:
      - ./data/mongo:/data/mongo
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  redis:
    container_name: redis
    image: redis:6.0.1
    volumes:
      - ./data/redis:/data/redis

  celery:
    container_name: celery
    image: test_afifa_mainapp:latest  # use web container image
    command: celery -A test_afifa worker -l info --uid=nobody --gid=nogroup
    volumes:
    - ./:/usr/src/app/
    depends_on:
      - postgresdb
      - mongodb
      - redis
    restart: always
    env_file:
      - project_config.env

  mainapp:
    container_name: mainapp
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
      - ./:/usr/src/app/
    ports:
      - "8000:8000"
    depends_on:
      - postgresdb
      - mongodb
      - redis
      - celery
    env_file:
      - project_config.env
    command: bash -c "python manage.py makemigrations
            && python manage.py migrate
            && python manage.py runserver 0.0.0.0:8000"
